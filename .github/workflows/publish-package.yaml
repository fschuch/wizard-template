name: Deploy to PyPi

on:
  release:
    types: [published] # trigger when a new versions is published

jobs:
  deploy-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up cache
        uses: actions/cache@v4
        id: cache
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'poetry.lock') }}-deploy-v1

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install poetry poetry-version-plugin
          python -m poetry install --no-dev
          deactivate

      - name: Build package
        run: |
          source .venv/bin/activate
          poetry build

      - name: Publish to Test PyPi
        env:
          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          if [[ -n "$TEST_PYPI_TOKEN" ]]; then
            source .venv/bin/activate
            poetry config repositories.test-pypi https://test.pypi.org/legacy/
            poetry config pypi-token.test-pypi $TEST_PYPI_TOKEN
            poetry publish -r test-pypi
          else
            echo "Secret TEST_PYPI_TOKEN is not defined. Skipping publish to Test PyPi."
          fi

      - name: Publish to PyPi
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          if [[ -n "$PYPI_TOKEN" ]]; then
            source .venv/bin/activate
            poetry config pypi-token.pypi $PYPI_TOKEN
            poetry publish
          else
            echo "Secret PYPI_TOKEN is not defined. Skipping publish to PyPi."
          fi
