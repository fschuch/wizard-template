name: Release on Tag

# This action:
#   - Is triggered when a new version is tagged;
#   - Check if the package version match the repository tag;
#   - Build and publish the packages to test-PyPI and/or PyPI.

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+-*"

jobs:
  build-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set up pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'hatch.toml') }}-publish-v1
          restore-keys: ${{ runner.os }}-python-${{ matrix.python-version }}-

      - name: Ensure latest pip
        run: python -m pip install --upgrade pip

      - name: Install Hatch
        run: python -m pip install hatch

      - name: Build package
        run: hatch build

      - name: Publish to Test PyPi
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_AUTH: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          if [[ -n "$TEST_PYPI_TOKEN" ]]; then
            hatch publish --repo test
          else
            echo "Secret TEST_PYPI_TOKEN is not defined. Skipping publish to Test PyPi."
          fi

      - name: Publish to PyPi
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}
        run: |
          if [[ -n "$PYPI_TOKEN" ]]; then
            hatch publish --repo main
          else
            echo "Secret PYPI_TOKEN is not defined. Skipping publish to PyPi."
          fi

      - name: Create release on GitHub
        uses: ncipollo/release-action@v1
        with:
          skipIfReleaseExists: true
          generateReleaseNotes: true
          token: ${{ secrets.TOKEN }}
